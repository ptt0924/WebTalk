<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.application.dao.AddFriendDao">
  <resultMap id="BaseResultMap" type="com.application.entity.AddFriend">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_account" jdbcType="INTEGER" property="fromAccount" />
    <result column="to_account" jdbcType="INTEGER" property="toAccount" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_account, to_account, message, send_time, `status`
  </sql>
  <select flushCache="true" id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from add_friend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from add_friend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.application.entity.AddFriend" useGeneratedKeys="true">
    insert into add_friend (from_account, to_account, message, 
      send_time, `status`)
    values (#{fromAccount,jdbcType=INTEGER}, #{toAccount,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.application.entity.AddFriend" useGeneratedKeys="true">
    insert into add_friend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromAccount != null">
        from_account,
      </if>
      <if test="toAccount != null">
        to_account,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromAccount != null">
        #{fromAccount,jdbcType=INTEGER},
      </if>
      <if test="toAccount != null">
        #{toAccount,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.application.entity.AddFriend">
    update add_friend
    <set>
      <if test="fromAccount != null">
        from_account = #{fromAccount,jdbcType=INTEGER},
      </if>
      <if test="toAccount != null">
        to_account = #{toAccount,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.application.entity.AddFriend">
    update add_friend
    set from_account = #{fromAccount,jdbcType=INTEGER},
      to_account = #{toAccount,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  <select id="getAddFriendMessage" resultMap="BaseResultMap" parameterType="integer">-->
<!--    select * from add_friend where &lt;!&ndash;from_account = #{account} or &ndash;&gt; to_account = #{account}-->
<!--  </select>-->

  <select flushCache="true" id="getAddFriendMessage" resultType="com.application.dto.AddFriendDto" parameterType="integer">
    select add_friend.id, from_account fromAccount, to_account toAccount, message, send_time sendTime, add_friend.`status` status,  `name`
    from user,add_friend where user.account = add_friend.from_account and add_friend.to_account=#{account} and add_friend.status='0';
  </select>

  <delete id="deleteAddFriend" parameterType="integer">
    delete from add_friend where from_account=#{from} and to_account=#{to}
  </delete>


  <select flushCache="true" id="getAddFriend" resultType="com.application.entity.AddFriend" parameterType="integer">
    select * from add_friend where (from_account=#{from} and to_account = #{to} or from_account = #{to} and to_account=#{from})
  </select>

  <update id="updateAddFriendStatus">
    update add_friend set status = #{status,jdbcType=VARCHAR} where from_account = #{from} and to_account = #{to}
  </update>
</mapper>