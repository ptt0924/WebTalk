<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.application.dao.UserMessageDao">
  <resultMap id="BaseResultMap" type="com.application.entity.UserMessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_account" jdbcType="INTEGER" property="fromAccount" />
    <result column="to_account" jdbcType="INTEGER" property="toAccount" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_account, to_account, `text`, img_url, file_url, send_time
  </sql>
  <select flushCache="true" id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.application.entity.UserMessage" useGeneratedKeys="true">
    insert into user_message (from_account, to_account, `text`, 
      img_url, file_url, send_time
      )
    values (#{fromAccount,jdbcType=INTEGER}, #{toAccount,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR}, 
      #{imgUrl,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.application.entity.UserMessage" useGeneratedKeys="true">
    insert into user_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromAccount != null">
        from_account,
      </if>
      <if test="toAccount != null">
        to_account,
      </if>
      <if test="text != null">
        `text`,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="fileUrl != null">
        file_url,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromAccount != null">
        #{fromAccount,jdbcType=INTEGER},
      </if>
      <if test="toAccount != null">
        #{toAccount,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.application.entity.UserMessage">
    update user_message
    <set>
      <if test="fromAccount != null">
        from_account = #{fromAccount,jdbcType=INTEGER},
      </if>
      <if test="toAccount != null">
        to_account = #{toAccount,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        `text` = #{text,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.application.entity.UserMessage">
    update user_message
    set from_account = #{fromAccount,jdbcType=INTEGER},
      to_account = #{toAccount,jdbcType=INTEGER},
      `text` = #{text,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select flushCache="true" id="get20Message" parameterType="integer" resultMap="BaseResultMap">
    select * from (select * from user_message where (from_account = #{fromAccount} and to_account = #{toAccount}
                                  Or from_account=#{toAccount} And to_account=#{fromAccount}) order by send_time desc limit #{page},20) a order by a.send_time
  </select>
</mapper>